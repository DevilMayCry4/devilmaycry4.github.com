---
layout: post
title: "Block"
date: 2013-06-20 15:55
comments: true
categories: IOS
---
<p>
IOS4后苹果开始使用block作为回调函数来取代传统的delegate。这种闭包函数可以是代码的逻辑更加清晰。精简大量的代码，但是由于block会隐藏式地retain在block中使用的变量 ，而没有注意这种情况的情况下，程序很容易出现内存泄露。
</p>

<p>
假设我们有一个controller，有个view是加到这个controller的view上面，当view中的某些功能完成的时候，view回调原来设置好的block。但是你会发现这个controller和这个view都无法调用到dealloc了。
</p>



- (void)viewDidLoad
{
   [super viewDidLoad];
   View *view = [View alloc]initWithFrame:CGRectMake(0,0,100,100)];
   view.OnComplete= ^{
   [self print];
   };
}

/************/
typedef void(^Block) block;

@property(noautomatic,copy)block OnComplete;


 

<p>上例中，view的语法块中访问self，所以view  retian self一次，所以但view没有调用[_OnComplete  release];之前，controller是不会被dealloc的，而view是在controller的view上面。如果controller不释放，view也不会被释放，这样就进入retain circle了。
</p>